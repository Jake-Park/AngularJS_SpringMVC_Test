//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.23 at 11:10:06 AM AEDT 
//


package generated;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _DatabaseDataImplementationsImplementationLanguage_QNAME = new QName("", "Language");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DatabaseData }
     * 
     */
    public DatabaseData createDatabaseData() {
        return new DatabaseData();
    }

    /**
     * Create an instance of {@link DatabaseData.Links }
     * 
     */
    public DatabaseData.Links createDatabaseDataLinks() {
        return new DatabaseData.Links();
    }

    /**
     * Create an instance of {@link DatabaseData.Links.Link }
     * 
     */
    public DatabaseData.Links.Link createDatabaseDataLinksLink() {
        return new DatabaseData.Links.Link();
    }

    /**
     * Create an instance of {@link DatabaseData.SchemaOut }
     * 
     */
    public DatabaseData.SchemaOut createDatabaseDataSchemaOut() {
        return new DatabaseData.SchemaOut();
    }

    /**
     * Create an instance of {@link DatabaseData.SchemaOut.Record }
     * 
     */
    public DatabaseData.SchemaOut.Record createDatabaseDataSchemaOutRecord() {
        return new DatabaseData.SchemaOut.Record();
    }

    /**
     * Create an instance of {@link DatabaseData.SchemaIn }
     * 
     */
    public DatabaseData.SchemaIn createDatabaseDataSchemaIn() {
        return new DatabaseData.SchemaIn();
    }

    /**
     * Create an instance of {@link DatabaseData.SchemaIn.Record }
     * 
     */
    public DatabaseData.SchemaIn.Record createDatabaseDataSchemaInRecord() {
        return new DatabaseData.SchemaIn.Record();
    }

    /**
     * Create an instance of {@link DatabaseData.Variables }
     * 
     */
    public DatabaseData.Variables createDatabaseDataVariables() {
        return new DatabaseData.Variables();
    }

    /**
     * Create an instance of {@link DatabaseData.Variables.Variable }
     * 
     */
    public DatabaseData.Variables.Variable createDatabaseDataVariablesVariable() {
        return new DatabaseData.Variables.Variable();
    }

    /**
     * Create an instance of {@link DatabaseData.Constants }
     * 
     */
    public DatabaseData.Constants createDatabaseDataConstants() {
        return new DatabaseData.Constants();
    }

    /**
     * Create an instance of {@link DatabaseData.Constants.Constant }
     * 
     */
    public DatabaseData.Constants.Constant createDatabaseDataConstantsConstant() {
        return new DatabaseData.Constants.Constant();
    }

    /**
     * Create an instance of {@link DatabaseData.Implementations }
     * 
     */
    public DatabaseData.Implementations createDatabaseDataImplementations() {
        return new DatabaseData.Implementations();
    }

    /**
     * Create an instance of {@link DatabaseData.Implementations.Implementation }
     * 
     */
    public DatabaseData.Implementations.Implementation createDatabaseDataImplementationsImplementation() {
        return new DatabaseData.Implementations.Implementation();
    }

    /**
     * Create an instance of {@link DatabaseData.Parameters }
     * 
     */
    public DatabaseData.Parameters createDatabaseDataParameters() {
        return new DatabaseData.Parameters();
    }

    /**
     * Create an instance of {@link DatabaseData.Parameters.Parameter }
     * 
     */
    public DatabaseData.Parameters.Parameter createDatabaseDataParametersParameter() {
        return new DatabaseData.Parameters.Parameter();
    }

    /**
     * Create an instance of {@link DatabaseData.Functions }
     * 
     */
    public DatabaseData.Functions createDatabaseDataFunctions() {
        return new DatabaseData.Functions();
    }

    /**
     * Create an instance of {@link DatabaseData.Functions.Function }
     * 
     */
    public DatabaseData.Functions.Function createDatabaseDataFunctionsFunction() {
        return new DatabaseData.Functions.Function();
    }

    /**
     * Create an instance of {@link DatabaseData.Loops }
     * 
     */
    public DatabaseData.Loops createDatabaseDataLoops() {
        return new DatabaseData.Loops();
    }

    /**
     * Create an instance of {@link DatabaseData.Loops.Loop }
     * 
     */
    public DatabaseData.Loops.Loop createDatabaseDataLoopsLoop() {
        return new DatabaseData.Loops.Loop();
    }

    /**
     * Create an instance of {@link DatabaseData.SequenceList }
     * 
     */
    public DatabaseData.SequenceList createDatabaseDataSequenceList() {
        return new DatabaseData.SequenceList();
    }

    /**
     * Create an instance of {@link DatabaseData.SequenceList.Sequence }
     * 
     */
    public DatabaseData.SequenceList.Sequence createDatabaseDataSequenceListSequence() {
        return new DatabaseData.SequenceList.Sequence();
    }

    /**
     * Create an instance of {@link DatabaseData.MappingMeta }
     * 
     */
    public DatabaseData.MappingMeta createDatabaseDataMappingMeta() {
        return new DatabaseData.MappingMeta();
    }

    /**
     * Create an instance of {@link DatabaseData.Links.Link.InFrom }
     * 
     */
    public DatabaseData.Links.Link.InFrom createDatabaseDataLinksLinkInFrom() {
        return new DatabaseData.Links.Link.InFrom();
    }

    /**
     * Create an instance of {@link DatabaseData.Links.Link.OutTo }
     * 
     */
    public DatabaseData.Links.Link.OutTo createDatabaseDataLinksLinkOutTo() {
        return new DatabaseData.Links.Link.OutTo();
    }

    /**
     * Create an instance of {@link DatabaseData.SchemaOut.Record.IDM }
     * 
     */
    public DatabaseData.SchemaOut.Record.IDM createDatabaseDataSchemaOutRecordIDM() {
        return new DatabaseData.SchemaOut.Record.IDM();
    }

    /**
     * Create an instance of {@link DatabaseData.SchemaIn.Record.IDM }
     * 
     */
    public DatabaseData.SchemaIn.Record.IDM createDatabaseDataSchemaInRecordIDM() {
        return new DatabaseData.SchemaIn.Record.IDM();
    }

    /**
     * Create an instance of {@link DatabaseData.Variables.Variable.IDV }
     * 
     */
    public DatabaseData.Variables.Variable.IDV createDatabaseDataVariablesVariableIDV() {
        return new DatabaseData.Variables.Variable.IDV();
    }

    /**
     * Create an instance of {@link DatabaseData.Constants.Constant.IDC }
     * 
     */
    public DatabaseData.Constants.Constant.IDC createDatabaseDataConstantsConstantIDC() {
        return new DatabaseData.Constants.Constant.IDC();
    }

    /**
     * Create an instance of {@link DatabaseData.Implementations.Implementation.Language }
     * 
     */
    public DatabaseData.Implementations.Implementation.Language createDatabaseDataImplementationsImplementationLanguage() {
        return new DatabaseData.Implementations.Implementation.Language();
    }

    /**
     * Create an instance of {@link DatabaseData.Parameters.Parameter.IDF }
     * 
     */
    public DatabaseData.Parameters.Parameter.IDF createDatabaseDataParametersParameterIDF() {
        return new DatabaseData.Parameters.Parameter.IDF();
    }

    /**
     * Create an instance of {@link DatabaseData.Parameters.Parameter.IDP }
     * 
     */
    public DatabaseData.Parameters.Parameter.IDP createDatabaseDataParametersParameterIDP() {
        return new DatabaseData.Parameters.Parameter.IDP();
    }

    /**
     * Create an instance of {@link DatabaseData.Functions.Function.IDF }
     * 
     */
    public DatabaseData.Functions.Function.IDF createDatabaseDataFunctionsFunctionIDF() {
        return new DatabaseData.Functions.Function.IDF();
    }

    /**
     * Create an instance of {@link DatabaseData.Loops.Loop.IDL }
     * 
     */
    public DatabaseData.Loops.Loop.IDL createDatabaseDataLoopsLoopIDL() {
        return new DatabaseData.Loops.Loop.IDL();
    }

    /**
     * Create an instance of {@link DatabaseData.SequenceList.Sequence.IDS }
     * 
     */
    public DatabaseData.SequenceList.Sequence.IDS createDatabaseDataSequenceListSequenceIDS() {
        return new DatabaseData.SequenceList.Sequence.IDS();
    }

    /**
     * Create an instance of {@link DatabaseData.MappingMeta.SchemaIn }
     * 
     */
    public DatabaseData.MappingMeta.SchemaIn createDatabaseDataMappingMetaSchemaIn() {
        return new DatabaseData.MappingMeta.SchemaIn();
    }

    /**
     * Create an instance of {@link DatabaseData.MappingMeta.SchemaOut }
     * 
     */
    public DatabaseData.MappingMeta.SchemaOut createDatabaseDataMappingMetaSchemaOut() {
        return new DatabaseData.MappingMeta.SchemaOut();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseData.Implementations.Implementation.Language }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Language", scope = DatabaseData.Implementations.Implementation.class)
    public JAXBElement<DatabaseData.Implementations.Implementation.Language> createDatabaseDataImplementationsImplementationLanguage(DatabaseData.Implementations.Implementation.Language value) {
        return new JAXBElement<DatabaseData.Implementations.Implementation.Language>(_DatabaseDataImplementationsImplementationLanguage_QNAME, DatabaseData.Implementations.Implementation.Language.class, DatabaseData.Implementations.Implementation.class, value);
    }

}
